node {
    def mavenHome = tool name:"maven 3.8.6"
   properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])
    try{
    stage ('checkoutcode'){
        git branch: 'devlopment', credentialsId: '8a36603e-02ca-4cae-af81-37664c799cd9', url: 'https://github.com/mss-ec-golla/maven-web-application.git'
    }
    stage ('Build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage ('execute sonarQube Report'){
         sh "${mavenHome}/bin/mvn clean sonar:sonar package"
    }
    stage ('UploadArtifactsInto ArtifactsRepo'){
        sh "${mavenHome}/bin/mvn clean deploy3"
    }
    stage ('DeployAppintoTomcatServer'){
sshagent(['35a83599-2ee0-49af-ae2c-20b776a8622f']) {
    sh "scp -o StrictHostkeyChecking=no target/maven-web-application.war ec2-user@172.31.4.89:/opt/apache-tomcat-9.0.65/webapps"
    
} 

    }
    }
    catch (e){
    slacknotifications(currentBuild.result)
    throw e
    }
    finally{
    slacknotifications(currentBuild.result)
    }
    
}
def slacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
