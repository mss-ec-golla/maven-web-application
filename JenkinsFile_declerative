
@library ('sharedlib')
pipeline{
    agent any
    options{
        timestamps()
        buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
     }
    triggers{
       pollSCM('* * * * *') 
    }
    tools{
        maven 'maven 3.8.6'
    }
    properties([parameters([choice(choices: ['master', 'devlopment'], description: 'enter branch name', name: 'Branchname'), string(defaultValue: 'Golla Chandra Sekhar', description: 'echo "the name value is:" ${Name}', name: 'Name')])])
    stages{
        stage('checkoutcode'){
            steps{
               git branch: "${params.Branchname}", credentialsId: '8a36603e-02ca-4cae-af81-37664c799cd9', url: 'https://github.com/mss-ec-golla/maven-web-application.git'
            }
        }
        stage('Build'){
            steps{
                  sh "mvn clean package"
            }
        }
        
        stage('ExecuteSonarQubeReport'){
           steps{
               sh "mvn clean sonar:sonar"
           }
        }
        stage('uploadartifactsintoartifactsrepo'){
            steps{
                sh "mvn clean deploy"
           }
        }
        stage('DeployintoTomcatServer'){
            steps{
                sshagent(['35a83599-2ee0-49af-ae2c-20b776a8622f']) {
                sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.207.98.107:/opt/apache-tomcat-9.0.65/webapps"
                }
            }
       } 
    }
    }
    post {
  success {
   sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}
}

